<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.es.nsi</groupId>
    <artifactId>nsi-pce</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jersey.version>2.2</jersey.version>
        <spring.version>3.2.3.RELEASE</spring.version>
        <slf4j.version>1.7.5</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <jung.version>2.0.1</jung.version>
    </properties>

    <repositories>
        <repository>
            <id>surfnet-public-releases</id>
            <name>surfnet-public-releases</name>
            <url>http://atlas.dlp.surfnet.nl/nexus/content/repositories/public-releases</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>onejar-maven-plugin.googlecode.com</id>
            <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- Jersey for JAX-RS and HTTP container runtime. -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-bundle</artifactId>
            <version>${jersey.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-proxy-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- SLF and Log4j for logging infrestructure. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Google JSON parsers for reading configuration data from files. -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.3</version>
        </dependency>

        <!-- For FileUtils -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!-- For spring beans to drive configuration loading. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- For scheduling capabilites. -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!-- Quartz is dependent on this. -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- graphs -->
        <dependency>
            <groupId>net.sf.jung</groupId>
            <artifactId>jung-algorithms</artifactId>
            <version>${jung.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.jung</groupId>
            <artifactId>jung-graph-impl</artifactId>
            <version>${jung.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.jung</groupId>
            <artifactId>jung-visualization</artifactId>
            <version>${jung.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- For HTTP header utilities. -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3-beta2</version>
        </dependency>

        <!-- Locally created dependencies. -->
        <dependency>
            <groupId>net.es.nsi</groupId>
            <artifactId>nsi-nsa-db</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.10</artifactId>
            <version>2.3.0-RC4</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
     </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                  <execution>
                    <id>pce.rest.api</id>
                    <goals>
                        <goal>xjc</goal>
                    </goals>
                    <configuration>
                        <schemaDirectory>${basedir}/src/main/xsd</schemaDirectory>
                        <schemaFiles>pce-messages.xsd, ogf_nsi_services_p2p_v2_0.xsd, ogf_nsi_services_types_v2_0.xsd</schemaFiles>
                        <packageName>net.es.nsi.pce.path.jaxb</packageName>
                        <staleFile>${project.build.directory}/jaxb2/.pathXjcStaleFlag</staleFile>
                    </configuration>
                  </execution>
                  <execution>
                    <id>topology</id>
                    <goals>
                        <goal>xjc</goal>
                    </goals>
                    <configuration>
                        <bindingDirectory>${basedir}/src/main/xsd</bindingDirectory>
                        <bindingFiles>project.xjb</bindingFiles>
                        <schemaDirectory>${basedir}/src/main/xsd</schemaDirectory>
                        <schemaFiles>nsi-topology.xsd, ogf_nsi_services_definition_v2_0.xsd, nmlbase.xsd, nsi-ext.xsd, ogf_nsi_discovery_protocol_v1_0.xsd, ogf_nsi_discovery_nsa_v1_0.xsd, gnsbod.xsd</schemaFiles>
                        <packageName>net.es.nsi.pce.topology.jaxb</packageName>
                        <staleFile>${project.build.directory}/jaxb2/.sdXjcStaleFlag</staleFile>
                        <clearOutputDir>false</clearOutputDir>
                    </configuration>
                  </execution>
                  <execution>
                    <id>management</id>
                    <goals>
                        <goal>xjc</goal>
                    </goals>
                    <configuration>
                        <schemaDirectory>${basedir}/src/main/xsd</schemaDirectory>
                        <schemaFiles>pce-management.xsd</schemaFiles>
                        <packageName>net.es.nsi.pce.management.jaxb</packageName>
                        <staleFile>${project.build.directory}/jaxb2/.mgntXjcStaleFlag</staleFile>
                        <clearOutputDir>false</clearOutputDir>
                    </configuration>
                  </execution>
                  <execution>
                    <id>topology-config</id>
                    <goals>
                        <goal>xjc</goal>
                    </goals>
                    <configuration>
                        <schemaDirectory>${basedir}/src/main/xsd</schemaDirectory>
                        <schemaFiles>pce-discovery-configuration.xsd, pce-topology-configuration.xsd</schemaFiles>
                        <packageName>net.es.nsi.pce.config.jaxb</packageName>
                        <staleFile>${project.build.directory}/jaxb2/.configXjcStaleFlag</staleFile>
                        <clearOutputDir>false</clearOutputDir>
                    </configuration>
                  </execution>
                  <execution>
                    <id>discovery</id>
                    <goals>
                        <goal>xjc</goal>
                    </goals>
                    <configuration>
                        <schemaDirectory>${basedir}/src/main/xsd</schemaDirectory>
                        <bindingDirectory>${basedir}/src/main/xsd</bindingDirectory>
                        <bindingFiles>discovery.xjb</bindingFiles>
                        <schemaFiles>dds-configuration.xsd, ogf_nsi_discovery_protocol_v1_0.xsd, ogf_nsi_discovery_nsa_v1_0.xsd, gnsbod.xsd, ogf_nsi_services_definition_v2_0.xsd, nmlbase.xsd, nsi-ext.xsd</schemaFiles>
                        <packageName>net.es.nsi.pce.discovery.jaxb</packageName>
                        <staleFile>${project.build.directory}/jaxb2/.discoveryXjcStaleFlag</staleFile>
                        <clearOutputDir>false</clearOutputDir>
                    </configuration>
                  </execution>
                </executions>
            </plugin>

            <!-- puts all code & libraries in one jar -->
            <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
                    <execution>
                        <id>PCE</id>
                        <configuration>
                            <mainClass>net.es.nsi.pce.server.Main</mainClass>
                            <classifier>onejar</classifier>
                            <filename>pce.jar</filename>
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>Visualization</id>
                        <configuration>
                            <mainClass>net.es.nsi.pce.visualization.TopologyViewer</mainClass>
                            <classifier>onejar</classifier>
                            <filename>TopologyViewer.jar</filename>
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <argLine>-Djersey.config.test.container.port=8400</argLine>
                    <argLine>-Dcom.sun.xml.bind.v2.runtime.JAXBContextImpl.fastBoot=true</argLine>
                    <argLine>-Djavax.net.ssl.trustStore=config/nsi-pce-truststore</argLine>
                    <argLine>-Djavax.net.ssl.trustStorePassword=changeit</argLine>   
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                  <filesets>
                    <fileset>
                      <directory>${basedir}/var</directory>
                    </fileset>
                  </filesets>
                </configuration>
              </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>surfnet-public-releases</id>
            <name>surfnet-public-releases</name>
            <url>http://atlas.dlp.surfnet.nl/nexus/content/repositories/public-releases</url>
        </repository>
        <snapshotRepository>
            <id>surfnet-public-snapshots</id>
            <name>surfnet-snapshots</name>
            <url>http://atlas.dlp.surfnet.nl/nexus/content/repositories/public-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>examples-source-zip</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
